// Code generated by "core generate -add-types"; DO NOT EDIT.

package histyle

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "cogentcore.org/core/texteditor/histyle.Trilean", IDName: "trilean", Doc: "Trilean value for StyleEntry value inheritance."})

var _ = types.AddType(&types.Type{Name: "cogentcore.org/core/texteditor/histyle.StyleEntry", IDName: "style-entry", Doc: "StyleEntry is one value in the map of highlight style values", Fields: []types.Field{{Name: "Color", Doc: "text color"}, {Name: "Background", Doc: "background color"}, {Name: "Border", Doc: "border color? not sure what this is -- not really used"}, {Name: "Bold", Doc: "bold font"}, {Name: "Italic", Doc: "italic font"}, {Name: "Underline", Doc: "underline"}, {Name: "NoInherit", Doc: "don't inherit these settings from sub-category or category levels -- otherwise everything with a Pass is inherited"}}})

var _ = types.AddType(&types.Type{Name: "cogentcore.org/core/texteditor/histyle.Style", IDName: "style", Doc: "Style is a full style map of styles for different token.Tokens tag values"})

var _ = types.AddType(&types.Type{Name: "cogentcore.org/core/texteditor/histyle.Styles", IDName: "styles", Doc: "Styles is a collection of styles", Methods: []types.Method{{Name: "OpenJSON", Doc: "Open hi styles from a JSON-formatted file. You can save and open\nstyles to / from files to share, experiment, transfer, etc.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}, Args: []string{"filename"}, Returns: []string{"error"}}, {Name: "SaveJSON", Doc: "Save hi styles to a JSON-formatted file. You can save and open\nstyles to / from files to share, experiment, transfer, etc.", Directives: []types.Directive{{Tool: "types", Directive: "add"}}, Args: []string{"filename"}, Returns: []string{"error"}}}})
