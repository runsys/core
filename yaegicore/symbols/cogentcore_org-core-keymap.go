// Code generated by 'yaegi extract cogentcore.org/core/keymap'. DO NOT EDIT.

package symbols

import (
	"cogentcore.org/core/keymap"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/keymap/keymap"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Abort":            reflect.ValueOf(keymap.Abort),
		"Accept":           reflect.ValueOf(keymap.Accept),
		"ActiveMap":        reflect.ValueOf(&keymap.ActiveMap).Elem(),
		"ActiveMapName":    reflect.ValueOf(&keymap.ActiveMapName).Elem(),
		"AvailableMaps":    reflect.ValueOf(&keymap.AvailableMaps).Elem(),
		"Backspace":        reflect.ValueOf(keymap.Backspace),
		"BackspaceWord":    reflect.ValueOf(keymap.BackspaceWord),
		"CancelSelect":     reflect.ValueOf(keymap.CancelSelect),
		"CloseAlt1":        reflect.ValueOf(keymap.CloseAlt1),
		"CloseAlt2":        reflect.ValueOf(keymap.CloseAlt2),
		"Complete":         reflect.ValueOf(keymap.Complete),
		"Copy":             reflect.ValueOf(keymap.Copy),
		"Cut":              reflect.ValueOf(keymap.Cut),
		"DefaultMap":       reflect.ValueOf(&keymap.DefaultMap).Elem(),
		"Delete":           reflect.ValueOf(keymap.Delete),
		"DeleteWord":       reflect.ValueOf(keymap.DeleteWord),
		"DocEnd":           reflect.ValueOf(keymap.DocEnd),
		"DocHome":          reflect.ValueOf(keymap.DocHome),
		"Duplicate":        reflect.ValueOf(keymap.Duplicate),
		"End":              reflect.ValueOf(keymap.End),
		"Enter":            reflect.ValueOf(keymap.Enter),
		"Find":             reflect.ValueOf(keymap.Find),
		"FocusNext":        reflect.ValueOf(keymap.FocusNext),
		"FocusPrev":        reflect.ValueOf(keymap.FocusPrev),
		"FunctionsN":       reflect.ValueOf(keymap.FunctionsN),
		"FunctionsValues":  reflect.ValueOf(keymap.FunctionsValues),
		"HistNext":         reflect.ValueOf(keymap.HistNext),
		"HistPrev":         reflect.ValueOf(keymap.HistPrev),
		"Home":             reflect.ValueOf(keymap.Home),
		"Insert":           reflect.ValueOf(keymap.Insert),
		"InsertAfter":      reflect.ValueOf(keymap.InsertAfter),
		"Jump":             reflect.ValueOf(keymap.Jump),
		"Kill":             reflect.ValueOf(keymap.Kill),
		"Lookup":           reflect.ValueOf(keymap.Lookup),
		"Menu":             reflect.ValueOf(keymap.Menu),
		"MoveDown":         reflect.ValueOf(keymap.MoveDown),
		"MoveLeft":         reflect.ValueOf(keymap.MoveLeft),
		"MoveRight":        reflect.ValueOf(keymap.MoveRight),
		"MoveUp":           reflect.ValueOf(keymap.MoveUp),
		"MultiA":           reflect.ValueOf(keymap.MultiA),
		"MultiB":           reflect.ValueOf(keymap.MultiB),
		"New":              reflect.ValueOf(keymap.New),
		"NewAlt1":          reflect.ValueOf(keymap.NewAlt1),
		"NewAlt2":          reflect.ValueOf(keymap.NewAlt2),
		"None":             reflect.ValueOf(keymap.None),
		"Of":               reflect.ValueOf(keymap.Of),
		"Open":             reflect.ValueOf(keymap.Open),
		"OpenAlt1":         reflect.ValueOf(keymap.OpenAlt1),
		"OpenAlt2":         reflect.ValueOf(keymap.OpenAlt2),
		"PageDown":         reflect.ValueOf(keymap.PageDown),
		"PageUp":           reflect.ValueOf(keymap.PageUp),
		"Paste":            reflect.ValueOf(keymap.Paste),
		"PasteHist":        reflect.ValueOf(keymap.PasteHist),
		"Recenter":         reflect.ValueOf(keymap.Recenter),
		"Redo":             reflect.ValueOf(keymap.Redo),
		"Refresh":          reflect.ValueOf(keymap.Refresh),
		"Replace":          reflect.ValueOf(keymap.Replace),
		"Save":             reflect.ValueOf(keymap.Save),
		"SaveAlt":          reflect.ValueOf(keymap.SaveAlt),
		"SaveAs":           reflect.ValueOf(keymap.SaveAs),
		"Search":           reflect.ValueOf(keymap.Search),
		"SelectAll":        reflect.ValueOf(keymap.SelectAll),
		"SelectMode":       reflect.ValueOf(keymap.SelectMode),
		"SetActiveMap":     reflect.ValueOf(keymap.SetActiveMap),
		"SetActiveMapName": reflect.ValueOf(keymap.SetActiveMapName),
		"StandardMaps":     reflect.ValueOf(&keymap.StandardMaps).Elem(),
		"Transpose":        reflect.ValueOf(keymap.Transpose),
		"TransposeWord":    reflect.ValueOf(keymap.TransposeWord),
		"Undo":             reflect.ValueOf(keymap.Undo),
		"WinClose":         reflect.ValueOf(keymap.WinClose),
		"WinFocusNext":     reflect.ValueOf(keymap.WinFocusNext),
		"WinSnapshot":      reflect.ValueOf(keymap.WinSnapshot),
		"WordLeft":         reflect.ValueOf(keymap.WordLeft),
		"WordRight":        reflect.ValueOf(keymap.WordRight),
		"ZoomIn":           reflect.ValueOf(keymap.ZoomIn),
		"ZoomOut":          reflect.ValueOf(keymap.ZoomOut),

		// type definitions
		"Functions": reflect.ValueOf((*keymap.Functions)(nil)),
		"Map":       reflect.ValueOf((*keymap.Map)(nil)),
		"MapItem":   reflect.ValueOf((*keymap.MapItem)(nil)),
		"MapName":   reflect.ValueOf((*keymap.MapName)(nil)),
		"Maps":      reflect.ValueOf((*keymap.Maps)(nil)),
		"MapsItem":  reflect.ValueOf((*keymap.MapsItem)(nil)),
	}
}
