// Code generated by 'yaegi extract cogentcore.org/core/styles/abilities'. DO NOT EDIT.

package symbols

import (
	"cogentcore.org/core/styles/abilities"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/styles/abilities/abilities"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AbilitiesN":      reflect.ValueOf(abilities.AbilitiesN),
		"AbilitiesValues": reflect.ValueOf(abilities.AbilitiesValues),
		"Activatable":     reflect.ValueOf(abilities.Activatable),
		"Checkable":       reflect.ValueOf(abilities.Checkable),
		"Clickable":       reflect.ValueOf(abilities.Clickable),
		"DoubleClickable": reflect.ValueOf(abilities.DoubleClickable),
		"Draggable":       reflect.ValueOf(abilities.Draggable),
		"Droppable":       reflect.ValueOf(abilities.Droppable),
		"Focusable":       reflect.ValueOf(abilities.Focusable),
		"Hoverable":       reflect.ValueOf(abilities.Hoverable),
		"LongHoverable":   reflect.ValueOf(abilities.LongHoverable),
		"LongPressable":   reflect.ValueOf(abilities.LongPressable),
		"RepeatClickable": reflect.ValueOf(abilities.RepeatClickable),
		"Scrollable":      reflect.ValueOf(abilities.Scrollable),
		"Selectable":      reflect.ValueOf(abilities.Selectable),
		"Slideable":       reflect.ValueOf(abilities.Slideable),
		"TripleClickable": reflect.ValueOf(abilities.TripleClickable),

		// type definitions
		"Abilities": reflect.ValueOf((*abilities.Abilities)(nil)),
	}
}
