// Code generated by 'yaegi extract cogentcore.org/core/styles/states'. DO NOT EDIT.

package symbols

import (
	"cogentcore.org/core/styles/states"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/styles/states/states"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Active":        reflect.ValueOf(states.Active),
		"Checked":       reflect.ValueOf(states.Checked),
		"Disabled":      reflect.ValueOf(states.Disabled),
		"DragHovered":   reflect.ValueOf(states.DragHovered),
		"Dragging":      reflect.ValueOf(states.Dragging),
		"Focused":       reflect.ValueOf(states.Focused),
		"Hovered":       reflect.ValueOf(states.Hovered),
		"Indeterminate": reflect.ValueOf(states.Indeterminate),
		"Invisible":     reflect.ValueOf(states.Invisible),
		"LongHovered":   reflect.ValueOf(states.LongHovered),
		"LongPressed":   reflect.ValueOf(states.LongPressed),
		"ReadOnly":      reflect.ValueOf(states.ReadOnly),
		"Selected":      reflect.ValueOf(states.Selected),
		"Sliding":       reflect.ValueOf(states.Sliding),
		"StatesN":       reflect.ValueOf(states.StatesN),
		"StatesValues":  reflect.ValueOf(states.StatesValues),

		// type definitions
		"States": reflect.ValueOf((*states.States)(nil)),
	}
}
