// Code generated by 'yaegi extract cogentcore.org/core/base/reflectx'. DO NOT EDIT.

package symbols

import (
	"cogentcore.org/core/base/reflectx"
	"image/color"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/base/reflectx/reflectx"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AnyIsNil":           reflect.ValueOf(reflectx.AnyIsNil),
		"CloneToType":        reflect.ValueOf(reflectx.CloneToType),
		"CopyMapRobust":      reflect.ValueOf(reflectx.CopyMapRobust),
		"CopySliceRobust":    reflect.ValueOf(reflectx.CopySliceRobust),
		"FormatDefault":      reflect.ValueOf(reflectx.FormatDefault),
		"KindIsBasic":        reflect.ValueOf(reflectx.KindIsBasic),
		"LongTypeName":       reflect.ValueOf(reflectx.LongTypeName),
		"MapAdd":             reflect.ValueOf(reflectx.MapAdd),
		"MapDelete":          reflect.ValueOf(reflectx.MapDelete),
		"MapDeleteAll":       reflect.ValueOf(reflectx.MapDeleteAll),
		"MapKeyType":         reflect.ValueOf(reflectx.MapKeyType),
		"MapSort":            reflect.ValueOf(reflectx.MapSort),
		"MapValueSort":       reflect.ValueOf(reflectx.MapValueSort),
		"MapValueType":       reflect.ValueOf(reflectx.MapValueType),
		"NewFrom":            reflect.ValueOf(reflectx.NewFrom),
		"NonDefaultFields":   reflect.ValueOf(reflectx.NonDefaultFields),
		"NonPointerType":     reflect.ValueOf(reflectx.NonPointerType),
		"NonPointerValue":    reflect.ValueOf(reflectx.NonPointerValue),
		"NumAllFields":       reflect.ValueOf(reflectx.NumAllFields),
		"OnePointerValue":    reflect.ValueOf(reflectx.OnePointerValue),
		"PointerValue":       reflect.ValueOf(reflectx.PointerValue),
		"SetFromDefaultTag":  reflect.ValueOf(reflectx.SetFromDefaultTag),
		"SetFromDefaultTags": reflect.ValueOf(reflectx.SetFromDefaultTags),
		"SetMapRobust":       reflect.ValueOf(reflectx.SetMapRobust),
		"SetRobust":          reflect.ValueOf(reflectx.SetRobust),
		"ShortTypeName":      reflect.ValueOf(reflectx.ShortTypeName),
		"SliceDeleteAt":      reflect.ValueOf(reflectx.SliceDeleteAt),
		"SliceElementType":   reflect.ValueOf(reflectx.SliceElementType),
		"SliceElementValue":  reflect.ValueOf(reflectx.SliceElementValue),
		"SliceNewAt":         reflect.ValueOf(reflectx.SliceNewAt),
		"SliceSort":          reflect.ValueOf(reflectx.SliceSort),
		"StringJSON":         reflect.ValueOf(reflectx.StringJSON),
		"StructSliceSort":    reflect.ValueOf(reflectx.StructSliceSort),
		"StructTags":         reflect.ValueOf(reflectx.StructTags),
		"ToBool":             reflect.ValueOf(reflectx.ToBool),
		"ToFloat":            reflect.ValueOf(reflectx.ToFloat),
		"ToFloat32":          reflect.ValueOf(reflectx.ToFloat32),
		"ToInt":              reflect.ValueOf(reflectx.ToInt),
		"ToString":           reflect.ValueOf(reflectx.ToString),
		"ToStringPrec":       reflect.ValueOf(reflectx.ToStringPrec),
		"Underlying":         reflect.ValueOf(reflectx.Underlying),
		"UnderlyingPointer":  reflect.ValueOf(reflectx.UnderlyingPointer),
		"ValueIsDefault":     reflect.ValueOf(reflectx.ValueIsDefault),
		"ValueSliceSort":     reflect.ValueOf(reflectx.ValueSliceSort),
		"WalkFields":         reflect.ValueOf(reflectx.WalkFields),

		// type definitions
		"SetAnyer":    reflect.ValueOf((*reflectx.SetAnyer)(nil)),
		"SetColorer":  reflect.ValueOf((*reflectx.SetColorer)(nil)),
		"SetStringer": reflect.ValueOf((*reflectx.SetStringer)(nil)),
		"ShouldSaver": reflect.ValueOf((*reflectx.ShouldSaver)(nil)),

		// interface wrapper definitions
		"_SetAnyer":    reflect.ValueOf((*_cogentcore_org_core_base_reflectx_SetAnyer)(nil)),
		"_SetColorer":  reflect.ValueOf((*_cogentcore_org_core_base_reflectx_SetColorer)(nil)),
		"_SetStringer": reflect.ValueOf((*_cogentcore_org_core_base_reflectx_SetStringer)(nil)),
		"_ShouldSaver": reflect.ValueOf((*_cogentcore_org_core_base_reflectx_ShouldSaver)(nil)),
	}
}

// _cogentcore_org_core_base_reflectx_SetAnyer is an interface wrapper for SetAnyer type
type _cogentcore_org_core_base_reflectx_SetAnyer struct {
	IValue  interface{}
	WSetAny func(v any) error
}

func (W _cogentcore_org_core_base_reflectx_SetAnyer) SetAny(v any) error { return W.WSetAny(v) }

// _cogentcore_org_core_base_reflectx_SetColorer is an interface wrapper for SetColorer type
type _cogentcore_org_core_base_reflectx_SetColorer struct {
	IValue    interface{}
	WSetColor func(c color.Color)
}

func (W _cogentcore_org_core_base_reflectx_SetColorer) SetColor(c color.Color) { W.WSetColor(c) }

// _cogentcore_org_core_base_reflectx_SetStringer is an interface wrapper for SetStringer type
type _cogentcore_org_core_base_reflectx_SetStringer struct {
	IValue     interface{}
	WSetString func(s string) error
}

func (W _cogentcore_org_core_base_reflectx_SetStringer) SetString(s string) error {
	return W.WSetString(s)
}

// _cogentcore_org_core_base_reflectx_ShouldSaver is an interface wrapper for ShouldSaver type
type _cogentcore_org_core_base_reflectx_ShouldSaver struct {
	IValue      interface{}
	WShouldSave func() bool
}

func (W _cogentcore_org_core_base_reflectx_ShouldSaver) ShouldSave() bool { return W.WShouldSave() }
